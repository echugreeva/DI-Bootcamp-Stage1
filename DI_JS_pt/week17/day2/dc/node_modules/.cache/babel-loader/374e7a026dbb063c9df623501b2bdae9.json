{"ast":null,"code":"export const searchFieldChange = txt => {\n  console.log(txt);\n  return {\n    type: 'SEARCH',\n    payload: txt\n  };\n};\nconst getRobotsLoading = () => {\n  return {\n    type: 'LOAD',\n    payload: true\n  };\n};\nconst getRobotsSuccess = arr => {\n  return {\n    type: \"GET_SUCCESS\",\n    payload: {\n      robots: arr,\n      showLoading: false\n    }\n  };\n};\nconst getRobotsFail = err => {\n  return {\n    type: \"GET_FAIL\",\n    payload: {\n      err: err,\n      showLoading: false\n    }\n  };\n};\nexport const getRobots = dispatch => {\n  // dispatch(getRobotsLoading());\n  setTimeout(() => {\n    fetch(\"http://jsonplaceholder.typicode.com/users\").then(res => res.json()).then(users => dispatch(getRobotsSuccess(users))).catch(err => {\n      dispatch(getRobotsFail(err.message));\n    });\n  }, 1000);\n};","map":{"version":3,"names":["searchFieldChange","txt","console","log","type","payload","getRobotsLoading","getRobotsSuccess","arr","robots","showLoading","getRobotsFail","err","getRobots","dispatch","setTimeout","fetch","then","res","json","users","catch","message"],"sources":["/Users/elenachugreeva/Documents/DI-Bootcamp-Stage1/DI_JS_pt/week17/day2/dc/src/redux/action.js"],"sourcesContent":["export const searchFieldChange = (txt) => {\n    console.log(txt)\n    return {\n        type: 'SEARCH',\n        payload: txt\n    }\n}\n\nconst getRobotsLoading = () => {\n    return {\n        type:'LOAD',\n        payload:true\n    }\n}\n\nconst getRobotsSuccess = (arr)=> {\n    return {\n        type: \"GET_SUCCESS\",\n        payload: {\n            robots: arr,\n            showLoading: false\n        }\n\n    }\n}\n\nconst getRobotsFail = (err)=> {\n    return {\n        type: \"GET_FAIL\",\n        payload: {\n            err: err,\n            showLoading: false\n        }\n\n    }\n}\n\nexport const getRobots = (dispatch) => {\n    // dispatch(getRobotsLoading());\n    setTimeout(()=>{\n        fetch(\n            \"http://jsonplaceholder.typicode.com/users\"\n          )\n            .then((res) => res.json())\n            .then((users) =>\n                dispatch(getRobotsSuccess(users)\n            ))\n            .catch((err) => {\n                dispatch(getRobotsFail(err.message));\n            })\n    }, 1000)\n    \n}"],"mappings":"AAAA,OAAO,MAAMA,iBAAiB,GAAIC,GAAG,IAAK;EACtCC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;EAChB,OAAO;IACHG,IAAI,EAAE,QAAQ;IACdC,OAAO,EAAEJ;EACb,CAAC;AACL,CAAC;AAED,MAAMK,gBAAgB,GAAG,MAAM;EAC3B,OAAO;IACHF,IAAI,EAAC,MAAM;IACXC,OAAO,EAAC;EACZ,CAAC;AACL,CAAC;AAED,MAAME,gBAAgB,GAAIC,GAAG,IAAI;EAC7B,OAAO;IACHJ,IAAI,EAAE,aAAa;IACnBC,OAAO,EAAE;MACLI,MAAM,EAAED,GAAG;MACXE,WAAW,EAAE;IACjB;EAEJ,CAAC;AACL,CAAC;AAED,MAAMC,aAAa,GAAIC,GAAG,IAAI;EAC1B,OAAO;IACHR,IAAI,EAAE,UAAU;IAChBC,OAAO,EAAE;MACLO,GAAG,EAAEA,GAAG;MACRF,WAAW,EAAE;IACjB;EAEJ,CAAC;AACL,CAAC;AAED,OAAO,MAAMG,SAAS,GAAIC,QAAQ,IAAK;EACnC;EACAC,UAAU,CAAC,MAAI;IACXC,KAAK,CACD,2CAA2C,CAC5C,CACEC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC,CACzBF,IAAI,CAAEG,KAAK,IACRN,QAAQ,CAACP,gBAAgB,CAACa,KAAK,CAAC,CACnC,CAAC,CACDC,KAAK,CAAET,GAAG,IAAK;MACZE,QAAQ,CAACH,aAAa,CAACC,GAAG,CAACU,OAAO,CAAC,CAAC;IACxC,CAAC,CAAC;EACV,CAAC,EAAE,IAAI,CAAC;AAEZ,CAAC"},"metadata":{},"sourceType":"module"}