{"ast":null,"code":"var _jsxFileName = \"/Users/elenachugreeva/Documents/DI-Bootcamp-Stage1/DI_JS_pt/week17/day5/movieapp/src/components/Search.js\";\nimport { connect } from 'react-redux';\nimport { searchFieldChange, getMovies } from '../redux/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Search = props => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Search for a movie ,TV series ..\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => {\n        props.searchFieldChng(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        props.getMovies(props.input);\n      },\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_c = Search;\nconst mapStateToProps = state => {\n  return {\n    input: state.input || ''\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    searchFieldChng: txt => dispatch(searchFieldChange(txt)),\n    getMovies: txt => getMovies(dispatch, txt)\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["connect","searchFieldChange","getMovies","Search","props","e","searchFieldChng","target","value","input","mapStateToProps","state","mapDispatchToProps","dispatch","txt"],"sources":["/Users/elenachugreeva/Documents/DI-Bootcamp-Stage1/DI_JS_pt/week17/day5/movieapp/src/components/Search.js"],"sourcesContent":["import {connect} from 'react-redux'\nimport { searchFieldChange,getMovies } from '../redux/actions'\nconst Search =(props) => {\n    return (\n        <>\n            <h1> Search for a movie ,TV series ..</h1>\n            <input type=\"text\" onChange={(e)=>{props.searchFieldChng(e.target.value)}}/>\n            <button onClick={()=>{props.getMovies(props.input)}}>Search</button>\n        </>\n        \n    )\n\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        input: state.input || ''\n  \n    }\n  }\n  \n  const mapDispatchToProps = (dispatch)=> {\n    return {\n      searchFieldChng: (txt) => dispatch(searchFieldChange(txt)),\n      getMovies: (txt)=>(getMovies(dispatch,txt))\n    }\n  }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Search)"],"mappings":";AAAA,SAAQA,OAAO,QAAO,aAAa;AACnC,SAASC,iBAAiB,EAACC,SAAS,QAAQ,kBAAkB;AAAA;AAAA;AAC9D,MAAMC,MAAM,GAAGC,KAAK,IAAK;EACrB,oBACI;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAA0C,eAC1C;MAAO,IAAI,EAAC,MAAM;MAAC,QAAQ,EAAGC,CAAC,IAAG;QAACD,KAAK,CAACE,eAAe,CAACD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC;MAAA;IAAE;MAAA;MAAA;MAAA;IAAA,QAAE,eAC5E;MAAQ,OAAO,EAAE,MAAI;QAACJ,KAAK,CAACF,SAAS,CAACE,KAAK,CAACK,KAAK,CAAC;MAAA,CAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAgB;EAAA,gBACrE;AAIX,CAAC;AAAA,KAVKN,MAAM;AAYZ,MAAMO,eAAe,GAAIC,KAAK,IAAK;EAC/B,OAAO;IACHF,KAAK,EAAEE,KAAK,CAACF,KAAK,IAAI;EAE1B,CAAC;AACH,CAAC;AAED,MAAMG,kBAAkB,GAAIC,QAAQ,IAAI;EACtC,OAAO;IACLP,eAAe,EAAGQ,GAAG,IAAKD,QAAQ,CAACZ,iBAAiB,CAACa,GAAG,CAAC,CAAC;IAC1DZ,SAAS,EAAGY,GAAG,IAAIZ,SAAS,CAACW,QAAQ,EAACC,GAAG;EAC3C,CAAC;AACH,CAAC;AAEH,eAAed,OAAO,CAACU,eAAe,EAAEE,kBAAkB,CAAC,CAACT,MAAM,CAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module"}