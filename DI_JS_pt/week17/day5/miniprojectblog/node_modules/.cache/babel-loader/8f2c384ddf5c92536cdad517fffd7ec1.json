{"ast":null,"code":"var _jsxFileName = \"/Users/elenachugreeva/Documents/DI-Bootcamp-Stage1/DI_JS_pt/week17/day5/miniprojectblog/src/components/Post.js\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Post = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: props.post.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.post.body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this)]\n  }, props.post.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n};\n_c = Post;\nconst mapStateToProps = (state, ownProps) => {\n  console.log(ownProps);\n  let id = ownProps.match.params.id;\n  return {\n    post: state.posts.find(post => post.id === id)\n  };\n};\n\n// const mapDispatchToProps = (dispatch)=> {\n//   return {\n//     searchFieldChng: (txt) => dispatch(searchFieldChange(txt)),\n//     getRobots: ()=>(getRobots(dispatch))\n//   }\n// }\n\nexport default connect(mapStateToProps)(Post);\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["connect","Post","props","post","title","body","id","mapStateToProps","state","ownProps","console","log","match","params","posts","find"],"sources":["/Users/elenachugreeva/Documents/DI-Bootcamp-Stage1/DI_JS_pt/week17/day5/miniprojectblog/src/components/Post.js"],"sourcesContent":["import { connect } from \"react-redux\";\n\n\nconst Post = (props)=> {\n    return (\n        <div key = {props.post.id}>\n            <h2>{props.post.title}</h2>\n            <p>{props.post.body}</p>\n            <button>delete</button>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    console.log(ownProps);\n    let id = ownProps.match.params.id\n    return {\n        post: state.posts.find(post => post.id === id)\n    }\n  }\n  \n  // const mapDispatchToProps = (dispatch)=> {\n  //   return {\n  //     searchFieldChng: (txt) => dispatch(searchFieldChange(txt)),\n  //     getRobots: ()=>(getRobots(dispatch))\n  //   }\n  // }\n  \n  export default connect(mapStateToProps)(Post)\n  "],"mappings":";AAAA,SAASA,OAAO,QAAQ,aAAa;AAAC;AAGtC,MAAMC,IAAI,GAAIC,KAAK,IAAI;EACnB,oBACI;IAAA,wBACI;MAAA,UAAKA,KAAK,CAACC,IAAI,CAACC;IAAK;MAAA;MAAA;MAAA;IAAA,QAAM,eAC3B;MAAA,UAAIF,KAAK,CAACC,IAAI,CAACE;IAAI;MAAA;MAAA;MAAA;IAAA,QAAK,eACxB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAuB;EAAA,GAHfH,KAAK,CAACC,IAAI,CAACG,EAAE;IAAA;IAAA;IAAA;EAAA,QAInB;AAEd,CAAC;AAAA,KARKL,IAAI;AAUV,MAAMM,eAAe,GAAG,CAACC,KAAK,EAAEC,QAAQ,KAAK;EACzCC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;EACrB,IAAIH,EAAE,GAAGG,QAAQ,CAACG,KAAK,CAACC,MAAM,CAACP,EAAE;EACjC,OAAO;IACHH,IAAI,EAAEK,KAAK,CAACM,KAAK,CAACC,IAAI,CAACZ,IAAI,IAAIA,IAAI,CAACG,EAAE,KAAKA,EAAE;EACjD,CAAC;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeN,OAAO,CAACO,eAAe,CAAC,CAACN,IAAI,CAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module"}