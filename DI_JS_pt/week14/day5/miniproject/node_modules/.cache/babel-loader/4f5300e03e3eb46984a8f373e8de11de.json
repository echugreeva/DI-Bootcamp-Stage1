{"ast":null,"code":"var _jsxFileName = \"/Users/elenachugreeva/Documents/DI-Bootcamp-Stage1/DI_JS_pt/week14/day5/miniproject/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport quotes from './QuotesDatabase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet prevQuote = 0;\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.getQuote = () => {\n      let i = Math.floor(Math.random() * quotes.length);\n\n      if (i !== prevQuote) {\n        let quote = quotes[i];\n        prevQuote = i;\n        this.setState({\n          quote: quote.quote\n        });\n\n        if (quote.author.length > 1) {\n          this.setState({\n            author: quote.author\n          });\n        } else {\n          this.setState({\n            author: 'unknown'\n          });\n        }\n      } else {\n        let quote = quotes[i + 1];\n        prevQuote = i + 1;\n        this.setState({\n          quote: quote.quote\n        });\n\n        if (quote.author.length > 1) {\n          this.setState({\n            author: quote.author\n          });\n        } else {\n          this.setState({\n            author: 'unknown'\n          });\n        }\n      }\n    };\n\n    this.state = {\n      quote: quotes[0].quote,\n      author: quotes[0].author,\n      color: ''\n    };\n  }\n\n  randomColor() {\n    const color = `rgb(\n        ${Math.floor(Math.random() * 155)},\n        ${Math.floor(Math.random() * 155)},\n        ${Math.floor(Math.random() * 155)})`;\n    return color;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          color: this.randomColor\n        },\n        children: this.state.quote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.state.author\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          color: this.randomColor\n        },\n        onClick: this.getQuote,\n        children: \"New quote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"names":["React","quotes","prevQuote","App","Component","constructor","getQuote","i","Math","floor","random","length","quote","setState","author","state","color","randomColor","render"],"sources":["/Users/elenachugreeva/Documents/DI-Bootcamp-Stage1/DI_JS_pt/week14/day5/miniproject/src/App.js"],"sourcesContent":["import React from 'react';\nimport './App.css';\nimport quotes from './QuotesDatabase'\n\nlet prevQuote=0;\n\n  class App extends React.Component{\n    constructor (){\n      super();\n      this.state = {\n        quote:quotes[0].quote,\n        author:quotes[0].author, \n        color: ''\n      };\n    }\n    \n    getQuote =()=> {\n      let i = Math.floor(Math.random() * quotes.length);\n      if(i !== prevQuote) {\n        let quote = quotes[i];\n        prevQuote = i;\n        this.setState({quote:quote.quote})\n        if (quote.author.length > 1){\n          this.setState({author:quote.author})\n        } else {\n          this.setState({author:'unknown'})\n        }\n        \n      } else {\n        let quote = quotes[i+1];\n        prevQuote = i+1;\n        this.setState({quote:quote.quote})\n        if (quote.author.length > 1){\n          this.setState({author:quote.author})\n        } else {\n          this.setState({author:'unknown'})\n        }\n      }\n      \n    }\n    randomColor() {\n      const color = `rgb(\n        ${Math.floor(Math.random() * 155)},\n        ${Math.floor(Math.random() * 155)},\n        ${Math.floor(Math.random() * 155)})`;\n      return color;\n    }\n\n    render (){\n      return (\n        <div> \n          <h1 style={{color: this.randomColor}}>{this.state.quote}</h1>\n          <p>{this.state.author}</p>\n          <button style={{color: this.randomColor}} onClick={this.getQuote}>New quote</button> \n    \n        </div>\n        \n        \n      );\n    }\n  \n  \n    \n  }\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,kBAAnB;;AAEA,IAAIC,SAAS,GAAC,CAAd;;AAEE,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAiC;EAC/BC,WAAW,GAAG;IACZ;;IADY,KASdC,QATc,GASJ,MAAK;MACb,IAAIC,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBT,MAAM,CAACU,MAAlC,CAAR;;MACA,IAAGJ,CAAC,KAAKL,SAAT,EAAoB;QAClB,IAAIU,KAAK,GAAGX,MAAM,CAACM,CAAD,CAAlB;QACAL,SAAS,GAAGK,CAAZ;QACA,KAAKM,QAAL,CAAc;UAACD,KAAK,EAACA,KAAK,CAACA;QAAb,CAAd;;QACA,IAAIA,KAAK,CAACE,MAAN,CAAaH,MAAb,GAAsB,CAA1B,EAA4B;UAC1B,KAAKE,QAAL,CAAc;YAACC,MAAM,EAACF,KAAK,CAACE;UAAd,CAAd;QACD,CAFD,MAEO;UACL,KAAKD,QAAL,CAAc;YAACC,MAAM,EAAC;UAAR,CAAd;QACD;MAEF,CAVD,MAUO;QACL,IAAIF,KAAK,GAAGX,MAAM,CAACM,CAAC,GAAC,CAAH,CAAlB;QACAL,SAAS,GAAGK,CAAC,GAAC,CAAd;QACA,KAAKM,QAAL,CAAc;UAACD,KAAK,EAACA,KAAK,CAACA;QAAb,CAAd;;QACA,IAAIA,KAAK,CAACE,MAAN,CAAaH,MAAb,GAAsB,CAA1B,EAA4B;UAC1B,KAAKE,QAAL,CAAc;YAACC,MAAM,EAACF,KAAK,CAACE;UAAd,CAAd;QACD,CAFD,MAEO;UACL,KAAKD,QAAL,CAAc;YAACC,MAAM,EAAC;UAAR,CAAd;QACD;MACF;IAEF,CAhCa;;IAEZ,KAAKC,KAAL,GAAa;MACXH,KAAK,EAACX,MAAM,CAAC,CAAD,CAAN,CAAUW,KADL;MAEXE,MAAM,EAACb,MAAM,CAAC,CAAD,CAAN,CAAUa,MAFN;MAGXE,KAAK,EAAE;IAHI,CAAb;EAKD;;EA0BDC,WAAW,GAAG;IACZ,MAAMD,KAAK,GAAI;AACrB,UAAUR,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAgC;AAC1C,UAAUF,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAgC;AAC1C,UAAUF,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAgC,GAHpC;IAIA,OAAOM,KAAP;EACD;;EAEDE,MAAM,GAAG;IACP,oBACE;MAAA,wBACE;QAAI,KAAK,EAAE;UAACF,KAAK,EAAE,KAAKC;QAAb,CAAX;QAAA,UAAuC,KAAKF,KAAL,CAAWH;MAAlD;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA,UAAI,KAAKG,KAAL,CAAWD;MAAf;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE;QAAQ,KAAK,EAAE;UAACE,KAAK,EAAE,KAAKC;QAAb,CAAf;QAA0C,OAAO,EAAE,KAAKX,QAAxD;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAUD;;AArD8B;;AA2DnC,eAAeH,GAAf"},"metadata":{},"sourceType":"module"}