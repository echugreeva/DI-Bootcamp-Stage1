{"ast":null,"code":"var _jsxFileName = \"/Users/elenachugreeva/Documents/DI-Bootcamp-Stage1/DI_JS_pt/week15/day5/memorygame/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport heroes from './heroes.json';\nimport Card from './Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.shuffle = arr => {\n      let nAr = arr.sort(function () {\n        return Math.random() - 0.5;\n      });\n      return nAr;\n    };\n    this.handleClick = id => {\n      console.log(`clicked on ${id}`);\n      // let clickedCard = this.state.heroesArr.filter(item => (item.id === id))\n      // let ind = this.state.heroesArr.indexOf(clickedCard);\n      // if(this.state.heroesArr[ind].clicked===false) {\n      //   let newArr = {...this.state.heroesArr};\n      //   newArr[ind].clicked=true;\n      //   this.setState({score: this.state.score + 1})\n      //   this.setState({score: this.state.highestScore + 1})\n      //   this.setState({heroesArr:this.shuffle(newArr)})\n\n      // } else {\n      //   let newArr = {...this.state.heroesArr};\n      //   newArr = newArr.map(item => \n      //     item.clicked = false\n      //   )\n      //   this.setState({heroesArr:this.shuffle(newArr)})\n      //   if(this.state.score > this.state.highestScore ) {\n      //     this.setState({highestScore:this.state.score})\n      //     this.setState({score:0})\n      //   } else {\n      //     this.setState({score:0})\n      //   }\n      // }\n    };\n    this.state = {\n      //object from react, you can save her whatever data you want to render\n      heroesArr: heroes.superheroes,\n      score: 0,\n      highestScore: 0\n    };\n  }\n  render() {\n    console.log(this.state.heroesArr[0]);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Superheroes Memory Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Score:\", this.state.score]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Top Score:\", this.state.highestScore]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Get points by clicking on an image but don't click on any more than once!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: this.state.heroesArr.map(item => {\n            return (\n              /*#__PURE__*/\n              // <Card key={item.id} info={item} action = {()=>{console.log(item.id)}}/> this works\n              _jsxDEV(Card, {\n                info: item,\n                onClick: () => {\n                  this.handleClick(item.id);\n                }\n              }, item.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 17\n              }, this)\n            );\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;\n\n//game logic: every click => checj card click stus, if not clicked, change click status in card object, add score, add to highest score, reshuffle array.\n// once clicked on card that was clicked: check score vs highest score, save highest score, set score to null, set click status to false,  reshuffle","map":{"version":3,"names":["React","heroes","Card","App","Component","constructor","shuffle","arr","nAr","sort","Math","random","handleClick","id","console","log","state","heroesArr","superheroes","score","highestScore","render","map","item"],"sources":["/Users/elenachugreeva/Documents/DI-Bootcamp-Stage1/DI_JS_pt/week15/day5/memorygame/src/App.js"],"sourcesContent":["import React from 'react';\nimport './App.css';\n\nimport heroes from './heroes.json'\nimport Card from './Card';\n\n\nclass App extends React.Component{\n  constructor (){\n    super();\n    this.state = {\n      //object from react, you can save her whatever data you want to render\n      heroesArr: heroes.superheroes,\n      score:0,\n      highestScore:0\n    }\n  }\n\n  shuffle = (arr) => {\n      let nAr = arr.sort(function () {\n        return Math.random()-0.5\n      })\n      return nAr\n  }\n\n  handleClick = (id) => {\n    console.log(`clicked on ${id}`);\n    // let clickedCard = this.state.heroesArr.filter(item => (item.id === id))\n    // let ind = this.state.heroesArr.indexOf(clickedCard);\n    // if(this.state.heroesArr[ind].clicked===false) {\n    //   let newArr = {...this.state.heroesArr};\n    //   newArr[ind].clicked=true;\n    //   this.setState({score: this.state.score + 1})\n    //   this.setState({score: this.state.highestScore + 1})\n    //   this.setState({heroesArr:this.shuffle(newArr)})\n      \n    // } else {\n    //   let newArr = {...this.state.heroesArr};\n    //   newArr = newArr.map(item => \n    //     item.clicked = false\n    //   )\n    //   this.setState({heroesArr:this.shuffle(newArr)})\n    //   if(this.state.score > this.state.highestScore ) {\n    //     this.setState({highestScore:this.state.score})\n    //     this.setState({score:0})\n    //   } else {\n    //     this.setState({score:0})\n    //   }\n    // }\n\n  }\n  \n  render() {\n    console.log(this.state.heroesArr[0])\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <nav>\n            <h1>Superheroes Memory Game\n            </h1>\n            <p>Score:{this.state.score}</p>\n            <p>Top Score:{this.state.highestScore}</p>\n          </nav>\n          <div>\n          Get points by clicking on an image but don't click on any more than once!\n          </div>\n          <div> \n            {this.state.heroesArr.map((item)=>{\n              return (\n                // <Card key={item.id} info={item} action = {()=>{console.log(item.id)}}/> this works\n\n                <Card key={item.id} info={item} onClick = {()=>{this.handleClick(item.id)}}/>\n              )\n              \n            })}\n\n          </div>\n          \n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n//game logic: every click => checj card click stus, if not clicked, change click status in card object, add score, add to highest score, reshuffle array.\n// once clicked on card that was clicked: check score vs highest score, save highest score, set score to null, set click status to false,  reshuffle \n\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW;AAElB,OAAOC,MAAM,MAAM,eAAe;AAClC,OAAOC,IAAI,MAAM,QAAQ;AAAC;AAG1B,MAAMC,GAAG,SAASH,KAAK,CAACI,SAAS;EAC/BC,WAAW,GAAG;IACZ,KAAK,EAAE;IAAC,KASVC,OAAO,GAAIC,GAAG,IAAK;MACf,IAAIC,GAAG,GAAGD,GAAG,CAACE,IAAI,CAAC,YAAY;QAC7B,OAAOC,IAAI,CAACC,MAAM,EAAE,GAAC,GAAG;MAC1B,CAAC,CAAC;MACF,OAAOH,GAAG;IACd,CAAC;IAAA,KAEDI,WAAW,GAAIC,EAAE,IAAK;MACpBC,OAAO,CAACC,GAAG,CAAE,cAAaF,EAAG,EAAC,CAAC;MAC/B;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IAEF,CAAC;IAxCC,IAAI,CAACG,KAAK,GAAG;MACX;MACAC,SAAS,EAAEhB,MAAM,CAACiB,WAAW;MAC7BC,KAAK,EAAC,CAAC;MACPC,YAAY,EAAC;IACf,CAAC;EACH;EAoCAC,MAAM,GAAG;IACPP,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,KAAK,CAACC,SAAS,CAAC,CAAC,CAAC,CAAC;IACpC,oBACE;MAAK,SAAS,EAAC,KAAK;MAAA,uBAClB;QAAQ,SAAS,EAAC,YAAY;QAAA,wBAC5B;UAAA,wBACE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QACK,eACL;YAAA,qBAAU,IAAI,CAACD,KAAK,CAACG,KAAK;UAAA;YAAA;YAAA;YAAA;UAAA,QAAK,eAC/B;YAAA,yBAAc,IAAI,CAACH,KAAK,CAACI,YAAY;UAAA;YAAA;YAAA;YAAA;UAAA,QAAK;QAAA;UAAA;UAAA;UAAA;QAAA,QACtC,eACN;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAEM,eACN;UAAA,UACG,IAAI,CAACJ,KAAK,CAACC,SAAS,CAACK,GAAG,CAAEC,IAAI,IAAG;YAChC;cAAA;cACE;cAEA,QAAC,IAAI;gBAAe,IAAI,EAAEA,IAAK;gBAAC,OAAO,EAAI,MAAI;kBAAC,IAAI,CAACX,WAAW,CAACW,IAAI,CAACV,EAAE,CAAC;gBAAA;cAAE,GAAhEU,IAAI,CAACV,EAAE;gBAAA;gBAAA;gBAAA;cAAA;YAA2D;UAGjF,CAAC;QAAC;UAAA;UAAA;UAAA;QAAA,QAEE;MAAA;QAAA;QAAA;QAAA;MAAA;IAEC;MAAA;MAAA;MAAA;IAAA,QACL;EAEV;AACF;AAEA,eAAeV,GAAG;;AAElB;AACA"},"metadata":{},"sourceType":"module"}