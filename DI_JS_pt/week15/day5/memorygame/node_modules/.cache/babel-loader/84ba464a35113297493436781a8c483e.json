{"ast":null,"code":"var _jsxFileName = \"/Users/elenachugreeva/Documents/DI-Bootcamp-Stage1/DI_JS_pt/week15/day5/memorygame/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport heroes from './heroes.json';\nimport Card from './Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.shuffle = arr => {\n      let nAr = arr.sort(function () {\n        return Math.random() - 0.5;\n      });\n      return nAr;\n    };\n    this.handleClick = e => {\n      console.log(`clicked on ${e.target.key}`);\n      let clickedCard = this.state.heroesArr.filter(item => item.id === e.target.key);\n      let ind = this.state.heroesArr.indexOf(clickedCard);\n      if (this.state.heroesArr[ind].clicked === false) {\n        let newArr = {\n          ...this.state.heroesArr\n        };\n        newArr[ind].clicked = true;\n        this.setState({\n          score: this.state.score + 1\n        });\n        this.setState({\n          score: this.state.highestScore + 1\n        });\n        this.setState({\n          heroesArr: this.shuffle(newArr)\n        });\n      } else {\n        let newArr = {\n          ...this.state.heroesArr\n        };\n        newArr = newArr.map(item => item.clicked = false);\n        this.setState({\n          heroesArr: this.shuffle(newArr)\n        });\n        if (this.state.score > this.state.highestScore) {\n          this.setState({\n            highestScore: this.state.score\n          });\n          this.setState({\n            score: 0\n          });\n        } else {\n          this.setState({\n            score: 0\n          });\n        }\n      }\n    };\n    this.state = {\n      //object from react, you can save her whatever data you want to render\n      heroesArr: heroes.superheroes,\n      score: 0,\n      highestScore: 0\n    };\n  }\n  render() {\n    console.log(this.state.heroesArr[0]);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Superheroes Memory Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Score:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Top Score:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Get points by clicking on an image but don't click on any more than once!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: this.state.heroesArr.map(item => {\n            return /*#__PURE__*/_jsxDEV(Card, {\n              info: item,\n              onClick: e => {\n                this.handleClick(e);\n              }\n            }, item.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;\n\n//game logic: every click => checj card click stus, if not clicked, change click status in card object, add score, add to highest score, reshuffle array.\n// once clicked on card that was clicked: check score vs highest score, save highest score, set score to null, set click status to false,  reshuffle","map":{"version":3,"names":["React","heroes","Card","App","Component","constructor","shuffle","arr","nAr","sort","Math","random","handleClick","e","console","log","target","key","clickedCard","state","heroesArr","filter","item","id","ind","indexOf","clicked","newArr","setState","score","highestScore","map","superheroes","render"],"sources":["/Users/elenachugreeva/Documents/DI-Bootcamp-Stage1/DI_JS_pt/week15/day5/memorygame/src/App.js"],"sourcesContent":["import React from 'react';\nimport './App.css';\n\nimport heroes from './heroes.json'\nimport Card from './Card';\n\n\nclass App extends React.Component{\n  constructor (){\n    super();\n    this.state = {\n      //object from react, you can save her whatever data you want to render\n      heroesArr: heroes.superheroes,\n      score:0,\n      highestScore:0\n    }\n  }\n\n  shuffle = (arr) => {\n      let nAr = arr.sort(function () {\n        return Math.random()-0.5\n      })\n      return nAr\n  }\n\n  handleClick = (e) => {\n    console.log(`clicked on ${e.target.key}`)\n    let clickedCard = this.state.heroesArr.filter(item => (item.id === e.target.key))\n    let ind = this.state.heroesArr.indexOf(clickedCard);\n    if(this.state.heroesArr[ind].clicked===false) {\n      let newArr = {...this.state.heroesArr};\n      newArr[ind].clicked=true;\n      this.setState({score: this.state.score + 1})\n      this.setState({score: this.state.highestScore + 1})\n      this.setState({heroesArr:this.shuffle(newArr)})\n      \n    } else {\n      let newArr = {...this.state.heroesArr};\n      newArr = newArr.map(item => \n        item.clicked = false\n      )\n      this.setState({heroesArr:this.shuffle(newArr)})\n      if(this.state.score > this.state.highestScore ) {\n        this.setState({highestScore:this.state.score})\n        this.setState({score:0})\n      } else {\n        this.setState({score:0})\n      }\n    }\n\n  }\n  \n  render() {\n    console.log(this.state.heroesArr[0])\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <nav>\n            <h1>Superheroes Memory Game\n            </h1>\n            <p>Score:</p>\n            <p>Top Score:</p>\n          </nav>\n          <div>\n          Get points by clicking on an image but don't click on any more than once!\n          </div>\n          <div> \n            {this.state.heroesArr.map((item)=>{\n              return (\n                <Card key={item.id} info={item} onClick = {(e)=>{this.handleClick(e)}}/>\n              )\n              \n            })}\n\n          </div>\n          \n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n//game logic: every click => checj card click stus, if not clicked, change click status in card object, add score, add to highest score, reshuffle array.\n// once clicked on card that was clicked: check score vs highest score, save highest score, set score to null, set click status to false,  reshuffle \n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}